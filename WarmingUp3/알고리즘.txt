입력: 1~50 사이의 랜덤한 숫자를 행렬[4][5]에 자동으로 입력한다.

처리: 

[INSERT 함수]
4행 5열의 행렬을 만든다. 숫자는 중복이 불가능하다.
행렬을 만들 때 for문을 2개 만들어서 돌릴건지, 아니면 배열을 일자라고 생각하고 값을 집어넣을건지 생각한다.

방법 1.만약 for문을 2개 만들려면, 해당 값이 있나 없나를 확인하려면 또 for문을 2개 돌려서 값이 들어있는지 없는지를 
확인해본 다음에 값을 집어넣어야 중복이 체크된다.
아니면 이번 테스트는 값이 50개로 고정이 되어있기 때문에 배열 하나를 더 만든다음, 값을 그 배열에 먼저 집어넣고
새로만든 값이 그 배열에 있다면 다시 값을 받아오고, 없다면 사용하는 방법이 있다.
중복 체크하는 것은 check라는 함수를 만들어서 사용하겠다.
static으로 배열도 만들 수 있는것인지 확인해보자.

함수: Check함수는 들어온 값을 1차원배열인 Check배열에 똑같은 값이 있는지 먼저 확인한다.
그 후 없다면 1을 반환하고, 있다면 0을 반환한다.

방법 2.배열을 일자로보고, warmingup2에서 했던 방식으로 구현하는 방법이다. 

[ASC함수]
2차원 배열을 가지고 오름차순을 하려면 어떻게 해야할까..
2차원 배열을 1차원배열에 복사를 하고 다시 2차원 배열에 저장하는 방법이 있다.
앞서 Insert함수에서 static check배열에 저장을 해놓은 값들을 활용해도되고, 그 배열을 전역변수로 바꾸고 해도 된다.
근데 이렇게하면 꼼수만 느는것 같으니 냉정하게 2차원 배열만을 가지고 정렬할 수 있는 방법을 생각해봐야겠다.

1차원 배열때 처럼 선택정렬을 사용할 수도 있다. 첫번째 값을 선택했다면 전체를 돌아서(이때도 for문 2개사용) 가장 작은값과 바꿔주면
된다.
잠깐만.. 교수님이 토글키처럼 다시누르면 다시 값이 돌아오도록 하라고 했었는데, 그렇게 하려면 진짜로 배열이 하나 더 필요하겠다.
함수 ASC에도 정적배열을 하나 만들어야겠다. 처음에 값을 전부 0으로 초기화한다. 비어있는 공간이 있다는 뜻이다.
1.만약 첫번째 값이 0이라면
main함수에서 가져온 값을 가지고 1차원 배열에 값들을 저장해 둔 뒤 오름차순으로 정렬한다.
2.만약 첫번째 값이 0이 아니라면... 아니다 다시생각해보자

생각!!!

값을 원래대로 되돌리려면 무조건 원본파일과 사본파일로 나누어야한다.
즉, 처음에 만들었던 값을 어딘가에는 저장을 해야한다는 사실이다.
전역배열을 만들어서 insert함수가 실행됨과 동시에 그 곳에다 저장을 한다.
각 정렬 함수들에는 switch정적변수를 둬서 0이면 원래 값을 저장해두고, 1이면 정렬을해서 저장한다.
문제가 있다. 
1.예를들어 asc함수와 desc함수가 있는데 asc에서 1이되어 정렬을하고, desc에서도 정렬을해서 1이 되었다. 그러면 asc를 다시 실행했을 때 1이니까 0으로 만들어 정렬하고
다시 desc를 누르면 내림차순으로 정렬이 되어야하는데 현재상태가 1이니까 0으로 바뀌면서 다시 원래 배열로 돌아간다.
2.전역변수에 switch변수를 둬서 0일때 각 함수가 정렬되고, 정렬되면 1로 바꾼다 하면 어떻게되나?
asc정렬을 시켜서 1로 만들고 desc를 하면 0으로 바뀌면서 원래 배열로돌아간다. 내림차순이 되는 것이 아니고.
3.그러면 어떻게해야하나? main함수나 전역변수로 switch변수를 만들고, 각 함수별로 정적변수 switch를 만든다.
휴.. 겨우 생각해냈다
일단 각자의 스위치를 나타내는 변수들은 따로 존재하야한다.
처음엔 다 0으로 시작한다. 0은 내가 정렬을 하고 있다는 소리고, 정렬을 할 수 있도록 준비중이라는 뜻이다. 
1은 현재 정렬중이라는 뜻이다. 
만약 asc가 정렬을해서 0에서 1로 바뀐다면, 다른 함수들의 스위치 변수를 0으로 바꾼다.
1 0 0 0 0 0 0이 된다.
desc가 정렬을 해서 1로 바꾼다면 다른 함수들의 스위치 변수를 모두 0으로 바꾼다
0 1 0 0 0 0 
즉, 다른 변수들은 또 다시 정렬을 할 수 있는 준비를 마치는 것이다.
1인 상태에서 다시 한번 실행한다면 0으로 바뀌며, 배열을 원래대로 되돌린다.
0 0 0 0 0 0 이렇게.
만약 A 함수가 정렬한 상태이고, B 함수가 자신의 방법으로 정렬을 했을 때 A가 정렬 준비상태인 0으로 안돌아가고 1로 남아있는 상태를 보자.
1 1 0 0 0 0 0 0
이렇게된다면 A를 다시 눌러서 배열을 초기상태로 되돌린다 했을 때
0 1 0 0 0 0 0 0
이렇게되고,
B를 다시 실행시키면 현재 배열이 초기상태니까 B정렬이 실행되어야하는데, 0으로 바뀌면서 초기상태로 되돌리기 때문에 구조상 오류이다.


마지막으로, 헤더파일 만드는 법도 습득해서 헤더파일로 분할해서 깔끔하게 정리하자.

